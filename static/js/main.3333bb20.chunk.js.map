{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Bweet.js","components/BweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","library","add","fab","faBreadSlice","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","color","size","style","marginBottom","faGoogle","faGithub","Bweet","bweetObj","isOwner","editing","setEditing","text","newBweet","setNewBweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","date","_date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","formatDate","createdAt","username","src","faTrash","faPencilAlt","BweetFactory","userObj","bweet","setBweet","attachment","setAttachment","attachmentRef","ref","child","uid","now","putString","response","getDownloadURL","creatorId","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","bweets","setBweets","useEffect","onSnapshot","snapshot","bweetArray","docs","map","displayName","data","key","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","marginTop","signOut","push","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","Auth","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3333bb20.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle, faGithub, fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faBreadSlice } from \"@fortawesome/free-solid-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nlibrary.add(fab, faBreadSlice);\n\nexport default () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faBreadSlice}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Bweet = ({ bweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newBweet, setNewBweet] = useState(bweetObj.text);\n\n  const formatDate = (date) => {\n    const _date = new Date(date);\n    return (\n      _date.getFullYear() +\n      \"-\" +\n      (_date.getMonth() + 1) +\n      \"-\" +\n      _date.getDate() +\n      \" \" +\n      _date.getHours() +\n      \":\" +\n      _date.getMinutes()\n    );\n  };\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete thie bweet?\");\n\n    if (ok) {\n      await dbService.doc(`bweets/${bweetObj.id}`).delete();\n      await storageService.refFromURL(bweetObj.attachmentUrl).delete();\n    } else {\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`bweets/${bweetObj.id}`).update({\n      text: newBweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewBweet(value);\n  };\n  return (\n    <div className=\"bweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container bweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your bweet\"\n              value={newBweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Bweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <h4>{bweetObj.text}</h4>\n          <div className=\"bweet__info__box\">\n            <div>{formatDate(bweetObj.createdAt)}</div>\n            <div className=\"bweet__owner\">{bweetObj.username}</div>\n          </div>\n          {bweetObj.attachmentUrl && <img src={bweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"bweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Bweet;\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BweetFactory = ({ userObj }) => {\n  const [bweet, setBweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    if (bweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${Date.now()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const bweetObj = {\n      text: bweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"bweets\").add(bweetObj);\n    setBweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setBweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={bweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default BweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Bweet from \"components/Bweet\";\nimport BweetFactory from \"components/BweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [bweets, setBweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"bweets\").onSnapshot((snapshot) => {\n      const bweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        username: userObj.displayName ? userObj.displayName : \"undefined\",\n        ...doc.data(),\n      }));\n      setBweets(bweetArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <BweetFactory userObj={userObj} />\n      <div>\n        {bweets.map((bweet) => (\n          <Bweet\n            key={bweet.id}\n            bweetObj={bweet}\n            isOwner={userObj && bweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(\"\");\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  // const getMyBweets = async () => {\n  //   await dbService\n  //     .collection(\"bweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\")\n  //     .get();\n  // };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  // useEffect(() => {\n  //   getMyBweets();\n  // }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBreadSlice } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(fab, faBreadSlice);\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link\n          to=\"/\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faBreadSlice} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>Home</span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 20,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj && userObj.displayName ? userObj.displayName : \"User\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setIsLoggedIn(true);\n        setInit(true);\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n        setInit(true);\n      }\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initialization...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Bwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}